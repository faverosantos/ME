
import numpy as np

# Flags de controle de fluxo de software
DEBUG_MODE = False

# Definições de valores de operações
MAX_OBJECTS = 0x7F

# Dados importantes para o protocolo do Doppler
'Fonte: 2019-02-22_Doc_Data Communication UMRR Traffic Management_UMRR0C'
HEADER = bytearray([0xCA, 0xCB, 0xCC, 0xCD])
FOOTER = bytearray([0xEA, 0xEB, 0xEC, 0xED])

FIRST_OBJECT_DATA = bytearray([0x05, 0x02])
INT_FIRST_OBJECT_DATA = int.from_bytes(FIRST_OBJECT_DATA, byteorder='little')
LAST_OBJECT_DATA = bytearray([0x05, 2*MAX_OBJECTS])
INT_LAST_OBJECT_DATA = int.from_bytes(LAST_OBJECT_DATA, byteorder='little') #TODO: revisar se é little mesmo
MASK_POSX = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFE])
MASK_POSY = bytearray([0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x00])
MASK_VELX = bytearray([0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00])
MASK_VELY = bytearray([0x00, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00])
OBJECT_LEN = bytearray([0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
OBJECT_ID = bytearray([0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])

OBJECT_CONTROL = bytearray([0x05, 0x01])
MASK_NUM_OF_OBJECTS = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF])
MASK_NUM_OF_MESSAGES = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00])
MASK_CYCLE_DURATION = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00])
MASK_OBJ_DATA0_FORMAT = bytearray([0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00])
MASK_OBJ_DATA1_FORMAT = bytearray([0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00])
MASK_CYCLE_COUNT = bytearray([0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00])

SENSOR_CONTROL = bytearray([0x05, 0x00])
MASK_SENSOR_STATUS = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF])
MASK_INTERFACE_MODE = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00])
MASK_NETWORK_ID = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00])
MASK_DIAGNOSE = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00])
MASK_RESERVE = bytearray([0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00])
MASK_TIME = bytearray([0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00])

SYNC_MESSAGE = bytearray([0x02, 0xFF])
MASK_COUNTER = bytearray([0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00])

SM_TIME_MESSAGE = bytearray([0x07, 0x82])
MASK_SM_SENSOR_ID = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F])
MASK_SM_INTERVAL_COUNTDOWN = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0])
MASK_SM_NUMBER_OF_LANES = bytearray([0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00])
MASK_SM_SERIAL_NUMBER = bytearray([0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00])

SM_0x783 = bytearray([0x07, 0x83])
MASK_SM_FEATURE_ID = bytearray([0x00, 0x01])
MASK_SM_MEASUREMENT_LINE = bytearray([0x00, 0xFE])
MASK_SM_WHICH_LANE = bytearray([0xFF, 0x00])
MASK_SM_RELAY_MESSAGE_ID = bytearray([0x00, 0x00, 0x00, 0x00, 0x07])
MASK_SM_RELAY_0_TO_7_STATUS = bytearray([0x00, 0x00, 0x00, 0xFF, 0x00])
MASK_SM_RELAY_8_TO_15_STATUS = bytearray([0x00, 0x00, 0xFF, 0x00, 0x00])
MASK_SM_RELAY_0_TO_7_ASSIGNMENT = bytearray([0x00, 0xFF, 0x00, 0x00, 0x00])
MASK_SM_RELAY_8_TO_15_ASSIGNMENT = bytearray([0xFF, 0x00, 0x00, 0x00, 0x00])
MASK_SM_FEATURE_PART_ID = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x01])
MASK_SM_MEASUREMENT_LINE = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0xFE])
MASK_SM_CLASS0 = bytearray([0x00, 0x00, 0x00, 0x00, 0xFF, 0x00])
MASK_SM_CLASS1 = bytearray([0x00, 0x00, 0x00, 0xFF, 0x00, 0x00])
MASK_SM_CLASS2 = bytearray([0x00, 0x00, 0xFF, 0x00, 0x00, 0x00])
MASK_SM_CLASS3 = bytearray([0x00, 0xFF, 0x00, 0x00, 0x00, 0x00])
MASK_SM_CLASS4 = bytearray([0xFF, 0x00, 0x00, 0x00, 0x00, 0x00])

SM_0x734 = bytearray([0x07, 0x34])
SM_0x782 = bytearray([0x07, 0x82])
SM_0x784 = bytearray([0x07, 0x84])
SM_0x785 = bytearray([0x07, 0x85])












REFRESH_TIME_MS = 0.5
